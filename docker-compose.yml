version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  auth-postgres:
    image: postgres:15
    container_name: auth-postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: authdb
    ports:
      - "55632:5432"
    volumes:
      - auth_pgdata:/var/lib/postgresql/data

  authservice-api:
    build:
      context: .
      dockerfile: AuthService/Dockerfile
    container_name: authservice-api
    depends_on:
      - auth-postgres
      - rabbitmq
    ports:
      - "5601:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=auth-postgres;Port=5432;Database=authdb;Username=admin;Password=admin123

  users-postgres:
    image: postgres:15
    container_name: users-postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: usersdb
    ports:
      - "55732:5432"
    volumes:
      - users_pgdata:/var/lib/postgresql/data

  userservice-api:
    build:
      context: .
      dockerfile: UserService/Dockerfile
    container_name: userservice-api
    depends_on:
      - users-postgres
      - rabbitmq
    ports:
      - "5602:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=users-postgres;Port=5432;Database=usersdb;Username=admin;Password=admin123

  topic-postgres:
    image: postgres:15
    container_name: topic-postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: topicsdb
    ports:
      - "55932:5432"
    volumes:
      - topic_pgdata:/var/lib/postgresql/data

  topicservice-api:
    build:
      context: .
      dockerfile: TopicService/Dockerfile
    container_name: topicservice-api
    depends_on:
      - topic-postgres
      - rabbitmq
    ports:
      - "5603:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=topic-postgres;Port=5432;Database=topicsdb;Username=admin;Password=admin123

  entry-postgres:
    image: postgres:15
    container_name: entry-postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: entrydb
    ports:
      - "55832:5432"
    volumes:
      - entry_pgdata:/var/lib/postgresql/data

  entryservice-api:
    build:
      context: .
      dockerfile: EntryService/Dockerfile
    container_name: entryservice-api
    depends_on:
      - entry-postgres
      - rabbitmq
    ports:
      - "5604:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=entry-postgres;Port=5432;Database=entrydb;Username=admin;Password=admin123

  vote-postgres:
    image: postgres:15
    container_name: vote-postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: votedb
    ports:
      - "55952:5432"
    volumes:
      - vote_pgdata:/var/lib/postgresql/data

  voteservice-api:
    build:
      context: .
      dockerfile: VoteService/Dockerfile
    container_name: voteservice-api
    depends_on:
      - vote-postgres
      - rabbitmq
    ports:
      - "5605:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=vote-postgres;Port=5432;Database=votedb;Username=admin;Password=admin123


  notification-postgres:
    image: postgres:15
    container_name: notification-postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: notificationdb
    ports:
      - "55972:5432"
    volumes:
      - notification_pgdata:/var/lib/postgresql/data

  notificationservice-api:
    build:
      context: .
      dockerfile: NotificationService/Dockerfile
    container_name: notificationservice-api
    depends_on:
      - notification-postgres
      - rabbitmq
    ports:
      - "5606:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=notification-postgres;Port=5432;Database=notificationdb;Username=admin;Password=admin123


  review-postgres:
    image: postgres:15
    container_name: review-postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: reviewdb
    ports:
      - "55992:5432"
    volumes:
      - review_pgdata:/var/lib/postgresql/data

  reviewservice-api:
    build:
      context: .
      dockerfile: ReviewService/Dockerfile
    container_name: reviewservice-api
    depends_on:
      - review-postgres
      - rabbitmq
    ports:
      - "5607:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=review-postgres;Port=5432;Database=reviewdb;Username=admin;Password=admin123


  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:8080"
    depends_on:
      - authservice-api
      - entryservice-api
      - topicservice-api
      - userservice-api
      - reviewservice-api 
      - voteservice-api




volumes:
  auth_pgdata:
  users_pgdata:
  topic_pgdata:
  entry_pgdata:
  vote_pgdata:
  notification_pgdata:
  review_pgdata:



